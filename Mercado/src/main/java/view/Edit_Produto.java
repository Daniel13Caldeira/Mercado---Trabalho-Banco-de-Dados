package view;

import DAO.ConexaoDAO;
import DAO.FornecedorDAO;
import DAO.ProdutoDAO;
import DAO.ProdutoOutroDAO;
import DAO.ProdutoPerecivelDAO;
import DAO.RemedioDAO;
import DAO.VestuarioDAO;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.Fornecedor;
import model.ProdutoOutro;
import model.ProdutoPerecivel;
import model.Remedio;
import model.Vestuario;

public class Edit_Produto extends javax.swing.JFrame {

    private String tipo;
    private Remedio prod_rem;
    private ProdutoOutro prod_ou;
    private ProdutoPerecivel prod_pp;
    private Vestuario prod_ves;
    private String id_func;

    public Edit_Produto(String idProd, String id_Func) throws SQLException {
        iniciaProd(idProd);
        this.id_func = id_Func;
        initComponents();
        preencheFornecedorBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        container = new javax.swing.JPanel();
        formArea12 = new javax.swing.JPanel();
        nomeLabel = new javax.swing.JLabel();
        nomeInput = new javax.swing.JTextField();
        tipoLabel = new javax.swing.JLabel();
        tipoBox = new javax.swing.JComboBox<>();
        precoLabel = new javax.swing.JLabel();
        precoInput = new javax.swing.JTextField();
        fornecedorLabel = new javax.swing.JLabel();
        fornecedorBox = new javax.swing.JComboBox<>();
        camp = new javax.swing.JPanel();
        validadeLabel = new javax.swing.JLabel();
        validadeInput = new javax.swing.JTextField();
        cReceitaRadioButton = new javax.swing.JRadioButton();
        scReceitaRadioButton = new javax.swing.JRadioButton();
        tamanhoLabel = new javax.swing.JLabel();
        tamanhoInput = new javax.swing.JTextField();
        editarButton = new javax.swing.JButton();
        quantidadeLabel = new javax.swing.JLabel();
        quantidadeInput = new javax.swing.JTextField();
        tittleArea = new javax.swing.JPanel();
        voltarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editar Dados");

        container.setBackground(new java.awt.Color(0, 255, 255));
        container.setPreferredSize(new java.awt.Dimension(720, 500));

        formArea12.setBackground(new java.awt.Color(169, 169, 169));
        formArea12.setBorder(javax.swing.BorderFactory.createTitledBorder("")
        );
        formArea12.setPreferredSize(new java.awt.Dimension(620, 360));

        nomeLabel.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        nomeLabel.setForeground(new java.awt.Color(9, 9, 91));
        nomeLabel.setText("Nome");

        nomeInput.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        nomeInput.setForeground(new java.awt.Color(9, 9, 91));
        nomeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomeInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomeInputKeyTyped(evt);
            }
        });

        tipoLabel.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        tipoLabel.setForeground(new java.awt.Color(9, 9, 91));
        tipoLabel.setText("Tipo");

        tipoBox.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        tipoBox.setForeground(new java.awt.Color(9, 9, 91));
        tipoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione o Tipo do Produto>", "Perecível", "Remédio", "Vestuário", "Outros" }));
        tipoBox.setEnabled(false);
        tipoBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoBoxItemStateChanged(evt);
            }
        });

        precoLabel.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        precoLabel.setForeground(new java.awt.Color(9, 9, 91));
        precoLabel.setText("Preço");

        precoInput.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        precoInput.setForeground(new java.awt.Color(9, 9, 91));
        precoInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precoInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                precoInputKeyTyped(evt);
            }
        });

        fornecedorLabel.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        fornecedorLabel.setForeground(new java.awt.Color(9, 9, 91));
        fornecedorLabel.setText("Fornecedor");

        fornecedorBox.setEditable(true);
        fornecedorBox.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        fornecedorBox.setForeground(new java.awt.Color(9, 9, 91));
        fornecedorBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione o Fornecedor>" }));
        fornecedorBox.setEnabled(false);

        camp.setBackground(new java.awt.Color(169, 169, 169));

        validadeLabel.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        validadeLabel.setForeground(new java.awt.Color(9, 9, 91));
        validadeLabel.setText("Validade");

        validadeInput.setEditable(false);
        validadeInput.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        validadeInput.setForeground(new java.awt.Color(9, 9, 91));
        validadeInput.setEnabled(false);
        validadeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                validadeInputKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validadeInputKeyTyped(evt);
            }
        });

        buttonGroup1.add(cReceitaRadioButton);
        cReceitaRadioButton.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        cReceitaRadioButton.setForeground(new java.awt.Color(9, 9, 91));
        cReceitaRadioButton.setText("Com receita");
        cReceitaRadioButton.setEnabled(false);

        buttonGroup1.add(scReceitaRadioButton);
        scReceitaRadioButton.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        scReceitaRadioButton.setForeground(new java.awt.Color(9, 9, 91));
        scReceitaRadioButton.setText("Sem Receita");
        scReceitaRadioButton.setEnabled(false);

        tamanhoLabel.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        tamanhoLabel.setForeground(new java.awt.Color(9, 9, 91));
        tamanhoLabel.setText("Tamanho");

        tamanhoInput.setEditable(false);
        tamanhoInput.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
        tamanhoInput.setForeground(new java.awt.Color(9, 9, 91));

        javax.swing.GroupLayout campLayout = new javax.swing.GroupLayout(camp);
        camp.setLayout(campLayout);
        campLayout.setHorizontalGroup(
            campLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(campLayout.createSequentialGroup()
                .addGroup(campLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(campLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(tamanhoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tamanhoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(validadeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(validadeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(campLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(cReceitaRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(scReceitaRadioButton)))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        campLayout.setVerticalGroup(
            campLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(campLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(campLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(campLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tamanhoLabel)
                        .addComponent(tamanhoInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(campLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(validadeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(validadeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(campLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cReceitaRadioButton)
                    .addComponent(scReceitaRadioButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        switch(tipo){
            case "Perecível": validadeInput.setText(prod_pp.getValidade());
            break;
            case "Remédio": validadeInput.setText(prod_rem.getValidade());
            break;
            default:
            break;

        }
        if(prod_rem!=null)
        {
            if(prod_rem.isPrecisaReceita()){
                cReceitaRadioButton.setSelected(true);
            }}
            if(prod_rem!=null){if(!prod_rem.isPrecisaReceita()){
                scReceitaRadioButton.setSelected(true);
            }}
            if(prod_ves!=null){tamanhoInput.setText(prod_ves.getTamanho());}

            editarButton.setBackground(new java.awt.Color(9, 9, 91));
            editarButton.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
            editarButton.setForeground(new java.awt.Color(255, 255, 255));
            editarButton.setText("Editar");
            editarButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    editarButtonActionPerformed(evt);
                }
            });

            quantidadeLabel.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
            quantidadeLabel.setForeground(new java.awt.Color(9, 9, 91));
            quantidadeLabel.setText("Quantidade");

            quantidadeInput.setFont(new java.awt.Font("Franklin Gothic Medium", 0, 14)); // NOI18N
            quantidadeInput.setForeground(new java.awt.Color(9, 9, 91));

            javax.swing.GroupLayout formArea12Layout = new javax.swing.GroupLayout(formArea12);
            formArea12.setLayout(formArea12Layout);
            formArea12Layout.setHorizontalGroup(
                formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formArea12Layout.createSequentialGroup()
                    .addContainerGap(62, Short.MAX_VALUE)
                    .addGroup(formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(editarButton)
                        .addGroup(formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formArea12Layout.createSequentialGroup()
                                .addComponent(nomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(precoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(precoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(formArea12Layout.createSequentialGroup()
                                .addGroup(formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fornecedorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantidadeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantidadeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(formArea12Layout.createSequentialGroup()
                                        .addComponent(fornecedorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tipoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(camp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(60, 60, 60))
            );
            formArea12Layout.setVerticalGroup(
                formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(formArea12Layout.createSequentialGroup()
                    .addGap(94, 94, 94)
                    .addGroup(formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(precoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(precoInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(29, 29, 29)
                    .addGroup(formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fornecedorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fornecedorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tipoLabel)
                        .addComponent(tipoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(21, 21, 21)
                    .addGroup(formArea12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(quantidadeLabel)
                        .addComponent(quantidadeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(camp, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(editarButton)
                    .addContainerGap(48, Short.MAX_VALUE))
            );

            switch (tipo) {
                case "Remédio":
                nomeInput.setText(prod_rem.getNome());
                break;
                case "Vestuário":
                nomeInput.setText(prod_ves.getNome());
                break;
                case "Perecível":
                nomeInput.setText(prod_pp.getNome());
                break;
                case "Outros":
                nomeInput.setText(prod_ou.getNome());
                break;
                default:
                break;
            }
            tipoBox.setSelectedItem(tipo);
            switch (tipo) {
                case "Remédio":
                precoInput.setText(prod_rem.getPreco()+"");
                break;
                case "Vestuário":
                precoInput.setText(prod_ves.getPreco()+"");
                break;
                case "Perecível":
                precoInput.setText(prod_pp.getPreco()+"");
                break;
                case "Outros":
                precoInput.setText(prod_ou.getPreco()+"");
                break;
                default:
                break;
            }
            switch (tipo) {
                case "Remédio":
                fornecedorBox.setSelectedItem(prod_rem.getFornecedor());
                break;
                case "Vestuário":
                fornecedorBox.setSelectedItem(prod_ves.getFornecedor());
                break;
                case "Perecível":
                fornecedorBox.setSelectedItem(prod_pp.getFornecedor());
                break;
                case "Outros":
                fornecedorBox.setSelectedItem(prod_ou.getFornecedor());
                break;
                default:
                break;
            }
            camp.setVisible(false);
            switch (tipo) {
                case "Remédio":
                quantidadeInput.setText(prod_rem.getQuantidade()+"");
                break;
                case "Vestuário":
                quantidadeInput.setText(prod_ves.getQuantidade()+"");
                break;
                case "Perecível":
                quantidadeInput.setText(prod_pp.getQuantidade()+"");
                break;
                case "Outros":
                quantidadeInput.setText(prod_ou.getQuantidade()+"");
                break;
                default:
                break;
            }

            tittleArea.setBackground(new java.awt.Color(0, 255, 255));
            tittleArea.setPreferredSize(new java.awt.Dimension(100, 90));

            voltarButton.setBackground(new java.awt.Color(9, 9, 91));
            voltarButton.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
            voltarButton.setForeground(new java.awt.Color(255, 255, 255));
            voltarButton.setText("Voltar");
            voltarButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    voltarButtonActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout tittleAreaLayout = new javax.swing.GroupLayout(tittleArea);
            tittleArea.setLayout(tittleAreaLayout);
            tittleAreaLayout.setHorizontalGroup(
                tittleAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tittleAreaLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(voltarButton)
                    .addContainerGap())
            );
            tittleAreaLayout.setVerticalGroup(
                tittleAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(tittleAreaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(voltarButton)
                    .addContainerGap(16, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
            container.setLayout(containerLayout);
            containerLayout.setHorizontalGroup(
                containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(containerLayout.createSequentialGroup()
                    .addContainerGap(14, Short.MAX_VALUE)
                    .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(formArea12, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                        .addComponent(tittleArea, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE))
                    .addContainerGap(14, Short.MAX_VALUE))
            );
            containerLayout.setVerticalGroup(
                containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, containerLayout.createSequentialGroup()
                    .addComponent(tittleArea, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(formArea12, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(48, Short.MAX_VALUE))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            pack();
            setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void nomeInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeInputKeyReleased
        limita(nomeInput);
    }//GEN-LAST:event_nomeInputKeyReleased

    private void nomeInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomeInputKeyTyped
        limita(nomeInput);
    }//GEN-LAST:event_nomeInputKeyTyped

    private void tipoBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoBoxItemStateChanged
        String tip = (String) tipoBox.getSelectedItem();
        if (!(tip.equals("Outros"))) {
            camp.setVisible(true);
            if (tip.equals("Vestuário")) {
                tamanhoLabel.setVisible(true);
                tamanhoInput.setVisible(true);
                validadeInput.setVisible(false);
                validadeLabel.setVisible(false);
                cReceitaRadioButton.setVisible(false);
                scReceitaRadioButton.setVisible(false);
            } else {
                if (tip.equals("Remédio")) {
                    tamanhoLabel.setVisible(false);
                    tamanhoInput.setVisible(false);
                    validadeInput.setVisible(false);
                    validadeLabel.setVisible(false);
                    cReceitaRadioButton.setVisible(true);
                    scReceitaRadioButton.setVisible(true);
                } else {
                    tamanhoLabel.setVisible(false);
                    tamanhoInput.setVisible(false);
                    validadeInput.setVisible(true);
                    validadeLabel.setVisible(true);
                    cReceitaRadioButton.setVisible(false);
                    scReceitaRadioButton.setVisible(false);
                }
            }
        } else {
            camp.setVisible(false);
        }
    }//GEN-LAST:event_tipoBoxItemStateChanged

    private void precoInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precoInputKeyReleased
        mascaraDouble(precoInput);
    }//GEN-LAST:event_precoInputKeyReleased

    private void precoInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precoInputKeyTyped
        mascaraDouble(precoInput);
    }//GEN-LAST:event_precoInputKeyTyped

    private void validadeInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_validadeInputKeyReleased
        mascaraData(validadeInput);
    }//GEN-LAST:event_validadeInputKeyReleased

    private void validadeInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_validadeInputKeyTyped
        mascaraData(validadeInput);
    }//GEN-LAST:event_validadeInputKeyTyped

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        boolean flag = true;
        if (flag) {
            Connection conexao;
            try {
                conexao = new ConexaoDAO().getConection();
                switch (tipo) {
                    case "Remédio":
                        prod_rem.setPreco(Double.parseDouble(precoInput.getText()));
                        prod_rem.setNome(nomeInput.getText());
                        prod_rem.setFornecedor(fornecedorBox.getSelectedItem().toString());
                        prod_rem.setQuantidade(Double.parseDouble(quantidadeInput.getText()));
                        prod_rem.setTipo(tipoBox.getSelectedItem().toString());
                        new RemedioDAO(conexao).updateR(prod_rem);
                        break;
                    case "Vestuário":
                        prod_ves.setTamanho(tamanhoInput.getText());
                        prod_ves.setPreco(Double.parseDouble(precoInput.getText()));
                        prod_ves.setNome(nomeInput.getText());
                        prod_ves.setFornecedor(fornecedorBox.getSelectedItem().toString());
                        prod_ves.setQuantidade(Double.parseDouble(quantidadeInput.getText()));
                        prod_ves.setTipo(tipoBox.getSelectedItem().toString());
                        new VestuarioDAO(conexao).updateV(prod_ves);
                        break;
                    case "Perecível":
                        prod_pp.setPreco(Double.parseDouble(precoInput.getText()));
                        prod_pp.setNome(nomeInput.getText());
                        prod_pp.setFornecedor(fornecedorBox.getSelectedItem().toString());
                        prod_pp.setQuantidade(Double.parseDouble(quantidadeInput.getText()));
                        prod_pp.setTipo(tipoBox.getSelectedItem().toString());
                        new ProdutoPerecivelDAO(conexao).updateP(prod_pp);
                        break;
                    case "Outros":
                        prod_ou.setPreco(Double.parseDouble(precoInput.getText()));
                        prod_ou.setNome(nomeInput.getText());
                        prod_ou.setFornecedor(fornecedorBox.getSelectedItem().toString());
                        prod_ou.setQuantidade(Double.parseDouble(quantidadeInput.getText()));
                        prod_ou.setTipo(tipoBox.getSelectedItem().toString());
                        new ProdutoOutroDAO(conexao).updatePo(prod_ou);
                        break;
                    default:
                        break;
                }
                JOptionPane.showMessageDialog(null, "Produto editado com sucesso!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                conexao.close();
            } catch (SQLException ex) {
                Logger.getLogger(Edit_Produto.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_editarButtonActionPerformed

    private void voltarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarButtonActionPerformed
        this.setVisible(false);
        try {
            new Tela_Funcionario(id_func).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Edit_Produto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_voltarButtonActionPerformed

    private void mascaraData(JTextField textField) {
        String texto = textField.getText();
        if (texto.length() > 0) {
            if (texto.length() > 10 || texto.charAt(texto.length() - 1) < '0' || texto.charAt(texto.length() - 1) > '9') {
                texto = texto.substring(0, texto.length() - 1);
            }
            if (texto.length() == 2 || texto.length() == 5) {
                texto += "/";
            }
        }
        textField.setText(texto);
    }

    private void mascaraDouble(JTextField textField) {
        String texto = textField.getText();
        if (texto.length() > 0) {
            if (!(texto.charAt(texto.length() - 1) == '.' || texto.charAt(texto.length() - 1) == ',' || (texto.charAt(texto.length() - 1) >= '0' && texto.charAt(texto.length() - 1) <= '9'))) {
                texto = texto.substring(0, texto.length() - 1);
            }

            String aux = "";
            for (int i = 0; i < texto.length(); i++) {
                if (texto.charAt(i) == ',') {
                    aux += '.';
                } else {
                    aux += texto.charAt(i);
                }
            }
            texto = aux;
        }
        textField.setText(texto);
    }

    private void mascaraInt(JTextField textField) {
        String texto = textField.getText();
        if (texto.length() > 0) {
            if (texto.charAt(texto.length() - 1) < '0' || texto.charAt(texto.length() - 1) > '9') {
                texto = texto.substring(0, texto.length() - 1);
            }
        }
        textField.setText(texto);
    }

    private void limita(JTextField textField) {
        String texto = textField.getText();
        if (texto.length() > 0) {
            if (texto.length() > 50) {
                texto = texto.substring(0, texto.length() - 1);
            }
        }
        textField.setText(texto);
    }

    private void preencheFornecedorBox() throws SQLException {
        Connection conexao = new ConexaoDAO().getConection();
        List<Fornecedor> strList = new FornecedorDAO(conexao).getAllList();
        conexao.close();
        for (int i = 0; i < strList.size(); i++) {
            fornecedorBox.addItem(strList.get(i).getCNPJ());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton cReceitaRadioButton;
    private javax.swing.JPanel camp;
    private javax.swing.JPanel container;
    private javax.swing.JButton editarButton;
    private javax.swing.JPanel formArea12;
    private javax.swing.JComboBox<String> fornecedorBox;
    private javax.swing.JLabel fornecedorLabel;
    private javax.swing.JTextField nomeInput;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JTextField precoInput;
    private javax.swing.JLabel precoLabel;
    private javax.swing.JTextField quantidadeInput;
    private javax.swing.JLabel quantidadeLabel;
    private javax.swing.JRadioButton scReceitaRadioButton;
    private javax.swing.JTextField tamanhoInput;
    private javax.swing.JLabel tamanhoLabel;
    private javax.swing.JComboBox<String> tipoBox;
    private javax.swing.JLabel tipoLabel;
    private javax.swing.JPanel tittleArea;
    private javax.swing.JTextField validadeInput;
    private javax.swing.JLabel validadeLabel;
    private javax.swing.JButton voltarButton;
    // End of variables declaration//GEN-END:variables

    private void iniciaProd(String idProd) throws SQLException {
        Connection conexao = new ConexaoDAO().getConection();
        tipo = new ProdutoDAO(conexao).getTipo(idProd);
        switch (tipo) {
            case "Remédio":
                prod_rem = new RemedioDAO(conexao).getRemedio(idProd);
                break;
            case "Vestuário":
                prod_ves = new VestuarioDAO(conexao).getVestuario(idProd);
                break;
            case "Perecível":
                prod_pp = new ProdutoPerecivelDAO(conexao).getProdutoPerecivel(idProd);
                break;
            case "Outros":
                prod_ou = new ProdutoOutroDAO(conexao).getProdutoOutro(idProd);
                break;
            default:
                break;
        }
        conexao.close();
    }
}
